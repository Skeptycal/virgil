// Copyright 2012 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// A module which exposes system calls directly to Virgil programs.
component LinuxModule {
	// conventional virtual address start
	def VADDR_START = 0x08000000; 
	// registers for system call arguments
	def paramRegs = [X86MachRegs.EBX, X86MachRegs.ECX, X86MachRegs.EDX, X86MachRegs.ESI, X86MachRegs.EDI];

	def linux = Syscall_TypeCon.new("Linux");

	new() {
		// polymorphic system call
		var typeParam = TypeUtil.ONE_TYPE_PARAM.head;
		var paramType = Tuple.newType(Lists.cons2(Int.TYPE, typeParam));
		var returnType = Tuple.newType(Lists.cons2(Int.TYPE, Int.TYPE));
		var ftype = FuncType.!(Function.newType(paramType, returnType));
		var sysop = OperatorOf.new(Opcode.MachSystemOp, [typeParam], ftype.sig(), (), MachOp.evalError<void>);
		linux.syscalls["syscall"] = (sysop, TypeUtil.ONE_TYPE_PARAM);
	}
	def install(prog: Program) {
		prog.typeEnv.add(linux);
	}
}
